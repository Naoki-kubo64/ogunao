name: Deploy to GitHub Pages

on:
  push:
    branches: [ master, main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Check package files
        run: |
          echo "📦 Checking package files..."
          ls -la package*.json || echo "Package files not found"
          echo "📁 Working directory: $(pwd)"
          echo "📋 Directory contents:"
          ls -la
          
      - name: Install dependencies
        run: |
          echo "🔧 Installing dependencies..."
          if [ -f package-lock.json ]; then
            echo "📋 Using npm ci with package-lock.json"
            npm ci --omit=dev || npm install --omit=dev
          elif [ -f package.json ]; then
            echo "📋 Using npm install with package.json" 
            npm install --omit=dev
          else
            echo "⚠️ No package.json found, continuing without dependencies"
          fi
          echo "📦 Dependencies installed successfully"
          
      - name: Build for production
        run: |
          echo "🚀 Starting GitHub Pages build..."
          
          # ビルドスクリプトが存在するかチェック
          if [ -f build.js ]; then
            echo "📋 Running custom build script..."
            node build.js
          elif [ -f package.json ] && grep -q '"build"' package.json; then
            echo "📋 Running npm build script..."
            npm run build
          else
            echo "⚠️ No build script found, creating basic docs directory..."
            mkdir -p docs
            cp -r *.html *.css *.js docs/ 2>/dev/null || true
            cp -r images music SE Video docs/ 2>/dev/null || true
          fi
          
          # ビルド結果の確認
          echo "📊 Build results:"
          ls -la docs/
          if [ -f docs/build-info.json ]; then
            echo "📋 Build info:"
            cat docs/build-info.json
          fi
          echo "✅ Build completed successfully!"
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4